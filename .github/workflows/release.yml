name: release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Resume cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
          musl
        key: ${{ runner.os }}-release-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-release
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - name: Build openssl
      run: |
        bash $GITHUB_WORKSPACE/.github/install-openssl.sh
    - name: Build
      run: |
        rustup target add x86_64-unknown-linux-musl
        cargo build --target x86_64-unknown-linux-musl --release
        mv target/x86_64-unknown-linux-musl/release/telegram-mesaga-fonto target/x86_64-unknown-linux-musl/release/tmf-amd64-linux
      env:
        PKG_CONFIG_ALLOW_CROSS: 1
        OPENSSL_STATIC: true
        OPENSSL_DIR: ${{ github.workspace }}/musl
    - name: Compress binaries
      uses: svenstaro/upx-action@v2
      with:
        file: target/x86_64-unknown-linux-musl/release/tmf-amd64-linux
    - name: Upload bin
      uses: actions/upload-artifact@v2
      with:
        name: amd64-linux
        path: target/x86_64-unknown-linux-musl/release/tmf-amd64-linux

  macos-build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Resume cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-release-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-release

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - name: Build
      run: |
        cargo build --release
        mv target/release/telegram-mesaga-fonto target/release/tmf-amd64-macos
    - name: Compress binaries
      uses: svenstaro/upx-action@v2
      with:
        file: target/release/tmf-amd64-macos
    - name: Upload bin
      uses: actions/upload-artifact@v2
      with:
        name: amd64-macos
        path: target/release/tmf-amd64-macos

  release:
    name: Release
    needs: [linux-build, macos-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download linux-bin
        uses: actions/download-artifact@v2
        with:
          name: amd64-linux
          path: ./packages
      - name: Download macos-bin
        uses: actions/download-artifact@v2
        with:
          name: amd64-macos
          path: ./packages
      - name: Github release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          files: |
            packages/*
            LICENSE

